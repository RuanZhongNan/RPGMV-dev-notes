(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{678:function(t,a,n){"use strict";n.r(a);var s=n(8),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:""}},[n("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")]),t._v(" ???")]),t._v(" "),n("h2",{attrs:{id:"在github内rmmv的关键词"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在github内rmmv的关键词"}},[t._v("#")]),t._v(" 在"),n("code",[t._v("github")]),t._v("内"),n("code",[t._v("rmmv")]),t._v("的关键词")]),t._v(" "),n("p",[t._v("用合适的关键词在g"),n("code",[t._v("ithub")]),t._v("内快速搜索合适的"),n("code",[t._v("开源插件")]),t._v("，"),n("code",[t._v("示例")]),t._v("。\n"),n("a",{attrs:{href:"https://github.com/topics/rpg-maker-mv",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("rpg-maker-mv")]),n("OutboundLink")],1),t._v(" "),n("a",{attrs:{href:"https://github.com/topics/rpgmakermv",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("rpgmakermv")]),n("OutboundLink")],1),t._v(" "),n("a",{attrs:{href:"https://github.com/topics/rpg-mv",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("rpg-mv")]),n("OutboundLink")],1)]),t._v(" "),n("h2",{attrs:{id:"重构准则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#重构准则"}},[t._v("#")]),t._v(" 重构准则")]),t._v(" "),n("p",[t._v("在模块化开发下，这些代码应该这样重构：")]),t._v(" "),n("p",[t._v("1：成员变量初始化写法的重构\nold： this.initialize.apply(this, arguments);\nnew：super();")]),t._v(" "),n("p",[t._v("这行代码的本质是实现变量的成员变量的赋初值，在constructor构造函数内调用super();即可初始化来自父类的成员变量。")]),t._v(" "),n("p",[t._v("2：父类方法调用的重构\nold：Scene_Base.prototype.create.call(this);\nnew：super.create();")]),t._v(" "),n("p",[t._v("这行代码的本质是调用来自父类的方法，并在调用父类方法的时候，绑定子类的this对象，实现子类对象调用父类方法。用类似于Java的super关键字即可调用来自父类的方法。")]),t._v(" "),n("h2",{attrs:{id:"如何用es6的类语法糖来继承prototype的-函数类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何用es6的类语法糖来继承prototype的-函数类"}},[t._v("#")]),t._v(" 如何用ES6的类语法糖来继承prototype的“函数类”？")]),t._v(" "),n("p",[t._v("想要使用ES6开发插件，必须会遇到如何使用ES6来继承源码的prototype函数类，MDN的class参考给了我们一个具体的示例\nfunction Animal (name) {\nthis.name = name;\n}\nAnimal.prototype.speak = function () {\nconsole.log(this.name + ' makes a noise.');}\nclass Dog extends Animal {\nspeak() {\nsuper.speak();\nconsole.log(this.name + ' barks.');\n}}\nvar d = new Dog('Mitzie');\nd.speak();//Mitzie makes a noise.  Mitzie barks.")]),t._v(" "),n("p",[t._v("我们可以给出这样的准则：\n①　在class继承的子类中，在构造函数内都使用super来调用父类的属性。否则子类无法使用this来调用父类的属性。\n②　如果重写的方法在功能上和父类相同，就使用super，否则不使用super。这种写法相当于.call(this)。")]),t._v(" "),n("h2",{attrs:{id:"sarange-project-code-database-萨兰奇项目注意事项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sarange-project-code-database-萨兰奇项目注意事项"}},[t._v("#")]),t._v(" sarange-project-code-database 萨兰奇项目注意事项")]),t._v(" "),n("p",[t._v("1.JSDoc命令：\n在 E:\\GitText\\sarange-project-code-database\\js 文件下启动cmd，并执行以下代码。")]),t._v(" "),n("p",[t._v("jsdoc CodeManager.js -r plugins\njsdoc -r plugins")]),t._v(" "),n("p",[t._v("代码解释：对js文件夹内的CodeManager.js和其目录下的plugins文件夹的全部内容，进行JSDoc文档的输出。")]),t._v(" "),n("p",[t._v("2.新的JSDoc命令\n执行：")]),t._v(" "),n("h2",{attrs:{id:"siakomobi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#siakomobi"}},[t._v("#")]),t._v(" siakomobi")]),t._v(" "),n("p",[t._v("这是巴哈姆特的siakomobi写的书本：《RPG Maker MV游戏制作基本外功篇:从操作到完成游戏一镜到底,马上就会!》这个书本可以说是RPGMV界内的教材。我现在没有。\nSiakomobi的作品：《七音图腾篇》（UltraKagura）")]),t._v(" "),n("h2",{attrs:{id:"原生的方式获取本地文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原生的方式获取本地文件"}},[t._v("#")]),t._v(" 原生的方式获取本地文件")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @author 阮中楠\n * @method loadSetting_RuanZhongNan\n * @deprecated\n * @description\n * 导入阮中楠的开发者个人设置。这个方法用于导入阮中楠专属的设置控件。\n * \n * 主调方法：Scene_Boot.prototype.create\n * \n * 算法：\n * 在游戏开始装载时，与 DataManager.loadDatabase()方法并列地导入数据。\n * \n * 使用DataManager.loadDataFile的算法来导入。\n * \n * 教程：\n * 主教程：https://blog.csdn.net/ryelqy/article/details/79279273\n * \n * 规范示例：https://xhr.spec.whatwg.org/#interface-xmlhttprequest\n * \n * API接口：https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest\n */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadSetting_RuanZhongNan")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xhr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//网址请求 打开( 'GET' , url位置) 这里写的是绝对路径。")]),t._v("\n  xhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'js/plugins/customDateFile/setting_RuanZhongNan.json'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置导入数据的数据类型 ")]),t._v("\n  xhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("overrideMimeType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'application/json'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//导入数据 这个写法是固定的。")]),t._v("\n  xhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onload")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//我们的全局变量 $settingRZN 都被window全局变量所保存。")]),t._v("\n    window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$settingRZN "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseText"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//发送请求")]),t._v("\n  xhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br")])]),n("h2",{attrs:{id:"其他人的一些随笔说明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他人的一些随笔说明"}},[t._v("#")]),t._v(" 其他人的一些随笔说明")]),t._v(" "),n("p",[t._v("Drill_up：\n“窗口和贴图都是同源的，窗口就是一种组合式贴图，只不过窗口被rmmv封装了一层，把特殊文字、窗口皮肤、下一步指针封装到一起了，而且还不能拆出来。这里比较麻烦的是，如果要显示简单文字，贴图可以直接drawtext，但是如果要显示特殊文字，包括多行文本、不同颜色不同大小的字符，都必须贴个窗口，这就显得比较臃肿，虽然不会用上……”")]),t._v(" "),n("h2",{attrs:{id:"graphics和scenemanager的初始化问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#graphics和scenemanager的初始化问题"}},[t._v("#")]),t._v(" Graphics和SceneManager的初始化问题：")]),t._v(" "),n("p",[t._v("你只有执行了main.js，你才可以使用Graphics的方法，而且只要是用了Graphics，SceneManager也一并启动了。因为Graphics的初始化就是用SceneManager来完成的。因此在写代码报错时，要注意此时是否已经执行到main.js了，如果没有运行到main.js的SceneManager，就不能使用Graphics系列的静态方法。")]),t._v(" "),n("h2",{attrs:{id:"scenemanager-run方法无条件获取错误的特点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#scenemanager-run方法无条件获取错误的特点"}},[t._v("#")]),t._v(" SceneManager.run方法无条件获取错误的特点：")]),t._v(" "),n("p",[t._v("只要是被SceneManager运行过的代码，自己单独写的throw error就一定会被其catchException方法所捕捉，然后后续输出的e.name是无法被更改的，这就意味着，我们做不了自定义错误类的name属性。")]),t._v(" "),n("h2",{attrs:{id:"try-catch语句的特性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#try-catch语句的特性"}},[t._v("#")]),t._v(" try-catch语句的特性：")]),t._v(" "),n("p",[t._v("真正使程序彻底停下来的，不是throw error，而是try-catch语句。当程序有多个错误时，mv提示界面只显示了一个错误的原因是，try-catch语句会立刻让程序停下来。")]),t._v(" "),n("h2",{attrs:{id:"window-base-dimmersprite变量设计的意义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#window-base-dimmersprite变量设计的意义"}},[t._v("#")]),t._v(" Window_Base._dimmerSprite变量设计的意义")]),t._v(" "),n("p",[t._v("这个变量设计的意义是，让窗口的背景和其框统一变成由_dimmerSprite控制的灰色渐变样式。，让dimmerSprite的层级覆盖过this._windowContentsSprite窗口内容精灵，进而实现“替换”窗口背景和窗口边框。")]),t._v(" "),n("p",[t._v("我们可以探究以下这个问题：\nWindow_MapName.prototype.drawBackground和Window_Base.prototype.refreshDimmerBitmap的效果区别问题？")]),t._v(" "),n("p",[t._v("首先，Window_Base.prototype.refreshDimmerBitmap方法修改的是this._dimmerSprite.bitmap，\n而Window_MapName.prototype.drawBackground方法修改的是this.contents即this._windowContentsSprite。由这二者的区别，我们可以提出：为什么要设置Window_Base._dimmerSprite这个变量？绘制阴影为什么要专门设置该变量？")]),t._v(" "),n("p",[t._v("_dimmerSprite和其他常见的窗口精灵不同，他被首次定义在Window_Base.initialize方法内部，是Window_Base定义了它。\nWindow_Base.prototype.initialize = function(x, y, width, height) {\n    Window.prototype.initialize.call(this);\n......\n    //模糊精灵 = null\n    this._dimmerSprite = null;\n};")]),t._v(" "),n("p",[t._v("真正使其加载进入窗口的是Window_Base.showBackgroundDimmer方法。这个方法不仅加载_dimmerSprite，而且还实质性地设置了具体的bitmap值，使得窗口出现竖直的灰色渐变。\nWindow_Base.prototype.showBackgroundDimmer = function() {\n    if (!this._dimmerSprite) {\n        this._dimmerSprite = new Sprite();\n        this._dimmerSprite.bitmap = new Bitmap(0, 0);\n        this.addChildToBack(this._dimmerSprite);\n    }\n    var bitmap = this._dimmerSprite.bitmap;\n    if (bitmap.width !== this.width || bitmap.height !== this.height) {\n        this.refreshDimmerBitmap();\n    }\n    this._dimmerSprite.visible = true;\n    this.updateBackgroundDimmer();\n};")]),t._v(" "),n("p",[t._v("Window.addChildToBack方法才将_dimmerSprite正式并归进入窗口内部。他并归的是一个window的_windowSpriteContainer，即“窗口精灵容器”的后面一位。这个代码让_dimmerSprite盖过了_windowSpriteContainer，所以我们才看不到_windowSpriteContainer所包含的窗口背景及窗口框。\nWindow.prototype.addChildToBack = function(child) {\n    var containerIndex = this.children.indexOf(this._windowSpriteContainer);\n    return this.addChildAt(child, containerIndex + 1);\n};")]),t._v(" "),n("h2",{attrs:{id:"window系的contentsopacity和contents变量的本质"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#window系的contentsopacity和contents变量的本质"}},[t._v("#")]),t._v(" window系的contentsOpacity和contents变量的本质")]),t._v(" "),n("p",[t._v("这两个变量都和_windowContentsSprite，“窗口内容精灵”相关。contentsOpacity是精灵的透明度、contents是精灵的位图bitmap。\nWindow_MapName窗口的背景绘图就是在contents内部绘制的，其渐变的刷新效果也是控制contentsOpacity变量。")]),t._v(" "),n("h2",{attrs:{id:"window系的opacity变量的本质"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#window系的opacity变量的本质"}},[t._v("#")]),t._v(" window系的opacity变量的本质")]),t._v(" "),n("p",[t._v("这里指的是window基类定义的opacity变量，opacity变量的本质是 _windowSpriteContainer.alpha ，“窗口精灵容器”的透明度。只要修改了opacity的值，就修改了窗口的框和其背景的透明度[[[]\nWindow.prototype._createAllParts = function() {\n......\nthis._windowSpriteContainer.addChild(this._windowBackSprite);\nthis._windowSpriteContainer.addChild(this._windowFrameSprite);\n......\n}\n]]。\n其中，窗口精灵容器_windowSpriteContainer包括了：_windowBackSprite和_windowFrameSprite ，即窗口背景精灵和窗口框精灵。\n读者可以探究以下的问题来加深对此内容的理解：为什么Window_MapName窗口可以让其窗口框及背景为空？使得我们每次看到地图名称时，都看不到窗口的边框和背景？")]),t._v(" "),n("h2",{attrs:{id:"datamanager-loaddatafile方法原理解释"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#datamanager-loaddatafile方法原理解释"}},[t._v("#")]),t._v(" DataManager.loadDataFile方法原理解释")]),t._v(" "),n("p",[t._v("我们的json文件是怎么加入到项目中的？其本质是运用了XMLHttpRequest类[[[] MDN. XMLHttpRequest https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest]]的方法。CSDN大多数的文章都简单地介绍了XMLHttpRequest类的使用方式，DataManager.loadDataFile方法的流程也几乎如出一辙。基本上的流程是：\n用XMLHttpRequest.open方法来打开json文件。\n用XMLHttpRequest.overrideMimeType方法指定导入文件的类型为json。\n用XMLHttpRequest.onload方法来显性地写一个函数，并接受XMLHttpRequest.responseText属性的返回值。\n用XMLHttpRequest.send方法来收尾。")]),t._v(" "),n("p",[t._v("值得说明的是，上述的全部流程都是严格的，先写open，在写send；使用onload方法时，还运用了window全局变量，mv很多的全局变量都被保存与此；json文件的本质是字符串形式的JavaScript对象，要用JSON.parse[[[] 菜鸟教程.JavaScript JSON.parse() https://www.runoob.com/js/javascript-json-parse.html]]方法来将字符串转换成具体的对象。")])])}),[],!1,null,null,null);a.default=e.exports}}]);